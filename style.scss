/*
*	Mixins, Constants and Funtions
*/

@mixin card($depth) {
	@if $depth < 1 {
		box-shadow: none;
	} @else if $depth > 5 {
		@warn "Invalid $depth `#{$depth}` for mixin `card`.";
	} @else {
		box-shadow: bottom-shadow($depth), top-shadow($depth);  
	}
}


@function top-shadow($depth) {
	$primary-offset: nth(1.5 3 4.5 7 10, $depth) * 1px;
	$blur: nth(1.5 3 4.5 7 10, $depth) * 4px;
	$color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

	@return 0 $primary-offset $blur $color;
}

@function bottom-shadow($depth) {
	$primary-offset: nth(1.5 3 5 8 12, $depth) * 1px;
	$blur: nth(1 2 2 2 3, $depth) * 4px;
	$color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

	@return 0 $primary-offset $blur $color;
}

/*
*	Basic Setup
*/


* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

html {
	height: 100%;
	min-height: 100%;
}

body {
	font-family: sans-serif;
	text-align: center;
	display: flex;
	flex-wrap: nowrap;
	justify-content: space-between;
	align-items: stretch;
	min-height: 100%;
}

button, input[type=file] {
	margin: 0.5rem 0;
	background: #444;
	color: #FFF;
	padding: 0.5rem;
	border: 1px solid black;
	cursor: pointer;
}

button {
	@include card(3);

	&:hover {
		@include card(5);
	}

	&:active {
		@include card(4);
		position: relative;
		top: 2px;
	}
}

ul {
	list-style: none;
}






/*
*
*   Content
*
*/

#content {
	padding: 50px 0;
	background: #ccc;
	order: 2;
	flex: 3 1 500px;
	text-align: center;
}

.canvasContainer {
	width: 500px;
	height: 500px;
	margin: auto;
	vertical-align: middle;
	text-align: center;
	background: #444;
	@include card(1);
}

canvas {
	margin: auto;
}

#originalCanvas {
	display: none;
}





/*
*
*   Controls
*
*/

#controls {
	padding: 50px 0;
	order: 1;
	flex: 0 1 250px;
	border-right: 2px solid black;
	background: #444;
	color: #fff;
}

.collapsible {

	margin: 0 0 1rem;

	input[type=checkbox] {
		display: none;
	}

	h3 {
		display: block;
		padding: 0.5rem;
		border: 2px solid black;
		border-width: 2px 0;
		position: relative;

		&:before {
			content: ">";
			position: absolute;
			left: 0.5rem;
			transform: rotate(90deg);
			transition: transform 0.3s ease;
		}
	}

	.collapsedContent {
		height: auto;
		transition: height 1s ease;
	}

	input[type=checkbox]:not(:checked) {

		& ~ .collapsedContent {
			height: 0;
			border: none;
			margin: 0;
			overflow: hidden;
		}

		& ~ label>h3:before {
			transform: rotate(0deg);
		}

	} 
}

.palette, .userPalette {
	
	border: 1px solid black;
	width: 180px;
	height: 100px;
	margin: 1rem auto;
	padding: 0;
	overflow: hidden;
	white-space: nowrap;
	
	.color {
		display: inline-block;
		height: 100px;
		width: 10px;
		margin: 0;
		vertical-align: top;
	}
	
	&:hover {
		box-shadow: black 0 0 20px;
	}
}

#autoColors {
	li {
		padding: 1rem;
		border: 1px solid black;
		border-width: 0 1px 1px;
		background: #333;

		&:hover {
			background: #222;
		}

		&:active {
			background: #111;	
		}
	}
}